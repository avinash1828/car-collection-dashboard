
name: Build and Deploy to Kubernetes

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: car-collection-app
  KUBERNETES_NAMESPACE: car-collection

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Create kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Create namespace if not exists
        run: |
          kubectl get namespace ${{ env.KUBERNETES_NAMESPACE }} || kubectl create namespace ${{ env.KUBERNETES_NAMESPACE }}

      - name: Update Kubernetes resources
        env:
          IMAGE_TAG: sha-${{ github.sha }}
        run: |
          # Replace placeholders in the Kubernetes manifests
          for file in k8s/*.yaml; do
            sed -i "s|\${DOCKER_REGISTRY}|${{ env.DOCKER_REGISTRY }}|g" $file
            sed -i "s|\${IMAGE_TAG}|sha-$(git rev-parse --short HEAD)|g" $file
          done
          
          # Apply Kubernetes manifests
          kubectl apply -f k8s/deployment.yaml -n ${{ env.KUBERNETES_NAMESPACE }}
          kubectl apply -f k8s/service.yaml -n ${{ env.KUBERNETES_NAMESPACE }}
          kubectl apply -f k8s/ingress.yaml -n ${{ env.KUBERNETES_NAMESPACE }}
          
          # Wait for deployment to be ready
          kubectl rollout status deployment/car-collection-app -n ${{ env.KUBERNETES_NAMESPACE }}
